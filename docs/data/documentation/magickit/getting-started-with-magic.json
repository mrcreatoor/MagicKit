{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this article, we’ll walk through the steps to use the MagicKit package in your SwiftUI project."}]},{"anchor":"Requirements","level":3,"type":"heading","text":"Requirements"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To follow along with this article, you’ll need the following:"}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"iOS 14 or later."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Xcode 12 or later."}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Basic knowledge of SwiftUI."}]}]}]},{"anchor":"Installing-the-MagicKit-package","level":3,"type":"heading","text":"Installing the MagicKit package"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The first step is to install the MagicKit in your Xcode project. You can do this by adding the following line to your project’s Package.swift file:"}]},{"type":"codeListing","syntax":"swift","code":["   .package(url: \"https:\/\/github.com\/mrcreatoor\/MagicKit.git\", from: \"0.0.1\")"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Once you’ve added the package to your project, you can import the MagicKit in your code using the following statement:"}]},{"type":"codeListing","syntax":"swift","code":["   import MagicKit"]},{"anchor":"Applying-the-Magic-modifier","level":3,"type":"heading","text":"Applying the Magic modifier"},{"type":"paragraph","inlineContent":[{"type":"text","text":"MagicKit provides a custom modifier called magic() that you can use to add transition effects to your views. Here is an example of how to use it:"}]},{"type":"codeListing","syntax":"swift","code":["   struct ContentView: View {","       @State var isShowing = false","       ","       var body: some View {","           GeometryReader { proxy in","               LinearGradient(gradient: Gradient(colors: [.orange, .pink]),","                               startPoint: .topLeading,","                               endPoint: .bottomTrailing)","               .onTapGesture {","                  isShowing = true","                }","               .magic(transition: .pageCurl(inverted: isShowing), duration: 1, show: $isShowing) {","                   LinearGradient(gradient: Gradient(colors: [.purple, .blue]),","                                   startPoint: .topLeading,","                                   endPoint: .bottomTrailing)","                   .onTapGesture {","                      isShowing = false","                   }","               }","           }","       }","   }"]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"article.png"},{"type":"text","text":" "},{"type":"text","text":"In this example, a LinearGradient view is used as the base view, and the "},{"type":"codeVoice","code":"magic()"},{"type":"text","text":" modifier is applied to it to create a transition effect. The LinearGradient view that is passed to the closure is used as the incoming view during the transition. The magic() modifier applies a pageCurl transition effect whenever the isShowing boolean is toggled. You can customize the transition effect by changing the transition parameter to one of the options available in the MagicTransition enumeration. You can also adjust the duration of the animation by setting the duration parameter to a different value."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The show parameter is a binding that controls whether the incoming view is shown or hidden."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"That’s it! With these simple steps, you can add visually appealing transitions to your projects."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/magickit\/getting-started-with-magic"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/MagicKit\/documentation\/MagicKit\/Getting-Started-with-Magic","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"MagicKit is a great way to add smooth transitions to your SwiftUI views. With just a few lines of code, you can create engaging and visually appealing user interfaces."}],"kind":"article","metadata":{"roleHeading":"Article","title":"Getting Started with MagicKit","role":"article","modules":[{"name":"MagicKit"}]},"hierarchy":{"paths":[["doc:\/\/MagicKit\/documentation\/MagicKit"]]},"references":{"doc://MagicKit/documentation/MagicKit":{"role":"collection","title":"MagicKit","abstract":[{"type":"text","text":"An Advanced and Flexible Framework for Building Engaging Transitions."}],"identifier":"doc:\/\/MagicKit\/documentation\/MagicKit","kind":"symbol","type":"topic","url":"\/documentation\/magickit"},"article.png":{"alt":"pageCurl","type":"image","identifier":"article.png","variants":[{"url":"\/images\/article.png","traits":["1x","light"]},{"url":"\/images\/article@2x.png","traits":["2x","light"]},{"url":"\/images\/article@3x.png","traits":["3x","light"]}]}}}